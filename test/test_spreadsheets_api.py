# coding: utf-8

"""
    Platform API

    Use the Workiva Platform API to programmatically manage items in the Workiva platform, such as files, folders, tasks, comments, documents, spreadsheets, and presentations. 

    The version of the OpenAPI document: v1
    Contact: platformsupport@workiva.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.spreadsheets_api import SpreadsheetsApi


class TestSpreadsheetsApi(unittest.TestCase):
    """SpreadsheetsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SpreadsheetsApi()

    def tearDown(self) -> None:
        pass

    def test_copy_sheet(self) -> None:
        """Test case for copy_sheet

        Copy sheet
        """
        pass

    def test_create_sheet(self) -> None:
        """Test case for create_sheet

        Create a new sheet in a spreadsheet
        """
        pass

    def test_delete_dataset_by_sheet_id(self) -> None:
        """Test case for delete_dataset_by_sheet_id

        Delete a single dataset
        """
        pass

    def test_delete_sheet_by_id(self) -> None:
        """Test case for delete_sheet_by_id

        Delete a single sheet
        """
        pass

    def test_get_datasets(self) -> None:
        """Test case for get_datasets

        Retrieve a list of datasets
        """
        pass

    def test_get_sheet_by_id(self) -> None:
        """Test case for get_sheet_by_id

        Retrieve a single sheet
        """
        pass

    def test_get_sheet_data(self) -> None:
        """Test case for get_sheet_data

        Retrieve data from a sheet
        """
        pass

    def test_get_sheets(self) -> None:
        """Test case for get_sheets

        Retrieve a list of sheets
        """
        pass

    def test_get_spreadsheet_by_id(self) -> None:
        """Test case for get_spreadsheet_by_id

        Retrieve a single spreadsheet
        """
        pass

    def test_get_spreadsheets(self) -> None:
        """Test case for get_spreadsheets

        Retrieve a list of spreadsheets
        """
        pass

    def test_get_values_by_range(self) -> None:
        """Test case for get_values_by_range

        Retrieve a list of range values
        """
        pass

    def test_partially_update_sheet_by_id(self) -> None:
        """Test case for partially_update_sheet_by_id

        Partially update a single sheet
        """
        pass

    def test_spreadsheet_export(self) -> None:
        """Test case for spreadsheet_export

        Initiate a spreadsheet export
        """
        pass

    def test_update_sheet(self) -> None:
        """Test case for update_sheet

        Update sheet content
        """
        pass

    def test_update_sheet_by_id(self) -> None:
        """Test case for update_sheet_by_id

        Update a single sheet
        """
        pass

    def test_update_values_by_range(self) -> None:
        """Test case for update_values_by_range

        Update values in a range
        """
        pass

    def test_upsert_datasets(self) -> None:
        """Test case for upsert_datasets

        Bulk upsert of datasets
        """
        pass


if __name__ == '__main__':
    unittest.main()
